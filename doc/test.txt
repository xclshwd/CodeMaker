1、保留本地的修改 的改法

1）直接commit本地的修改 ----也一般不用这种方法

2）通过git stash  ---- 通常用这种方法

git stash
git pull
git stash pop
通过git stash将工作区恢复到上次提交的内容，同时备份本地所做的修改，之后就可以正常git pull了，git pull完成后，执行git stash pop将之前本地做的修改应用到当前工作区。

git stash: 备份当前的工作区的内容，从最近的一次提交中读取相关内容，让工作区保证和上次提交的内容一致。同时，将当前的工作区内容保存到Git栈中。

git stash pop: 从Git栈中读取最近一次保存的内容，恢复工作区的相关内容。由于可能存在多个Stash的内容，所以用栈来管理，pop会从最近的一个stash中读取内容并恢复。

git stash list: 显示Git栈内的所有备份，可以利用这个列表来决定从那个地方恢复。

git stash clear: 清空Git栈。此时使用gitg等图形化工具会发现，原来stash的哪些节点都消失了。

2、放弃本地修改 的改法  ----这种方法会丢弃本地修改的代码，而且不可找回

git reset --hard
git pull<br><br><br><br><br><br>


找到需要回退的那次commit的 哈希值，
commit 73e1b181c437e7ff91bf002ad61efc5cd09f8ea4
Author: hswang <hswang@streamax.com>
Date:   Tue May 16 08:58:03 2017 +0800

git reset --hard commit_id 
 
 使用上面的命令进行回退